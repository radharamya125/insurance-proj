pipeline {
    agent any
 
    stages {
        stage('Cloning') {
            steps {
                echo 'Cloining the code from the github repository.'
                git 'https://github.com/radharamya125/insurance-proj.git'

            }
        }

    stage('Building') {
            steps {
                echo 'package the given code by using maven'
                sh 'mvn clean package'
            }
            
        }


    stage('Publish TestNg report') {
           steps {
                echo 'Genrate HTML report using TestNg'
                publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: '/var/lib/jenkins/workspace/Insurance-Project/target/surefire-reports', reportFiles: 'index.html', reportName: 'HTML Report', reportTitles: '', useWrapperFileDirectly: true])
           }

       }

    stage('Image Creating') {
           steps {
                echo 'creating an image using docker'
                sh 'docker build -t radharamya/insurance-project:1.0 .'
           }

       }

    

   

    stage('Login') {
           steps {
                echo 'Login into the Dockerhub'
                withCredentials([usernamePassword(credentialsId: 'Dockerlogin', passwordVariable: 'PASSWORD', usernameVariable: 'USER')]) {
                sh "docker login -u ${env.USER} -p ${env.PASSWORD}"
               
                    }

           }

       }

     

     stage('Pushing') {
           steps {
                echo 'pushing the image into dockerhub'
                sh 'docker push radharamya/insurance-project:1.0'
           }

       }

    stage('Ansible config and Deploying') {
            steps {
                echo 'Deploying that application to the production server'
               ansiblePlaybook credentialsId: '1825da71-9d8b-446f-8f5b-aa18dbb23bc5', disableHostKeyChecking: true, installation: 'ansible', inventory: '/etc/ansible/hosts', playbook: '/var/lib/jenkins/workspace/Insurance-Project/playbook.yaml', vaultTmpPath: ''
           }
}


    

       
    

    






}
}
